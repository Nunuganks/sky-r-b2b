/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    'product-variants': ProductVariant;
    'variant-options': VariantOption;
    categories: Category;
    carts: Cart;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'product-variants': ProductVariantsSelect<false> | ProductVariantsSelect<true>;
    'variant-options': VariantOptionsSelect<false> | VariantOptionsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    carts: CartsSelect<false> | CartsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  phoneCountryCode: string;
  phoneNumber: string;
  role: 'customer' | 'agency' | 'reseller' | 'vip' | 'admin';
  discountPercent: number;
  companyName?: string | null;
  eik?: string | null;
  bulstat?: string | null;
  mol?: string | null;
  companyWebsite?: string | null;
  companyActivity?: string | null;
  deliveryCountry?: string | null;
  deliveryPostalCode?: string | null;
  deliveryCity?: string | null;
  deliveryAddress?: string | null;
  invoiceCountry?: string | null;
  invoicePostalCode?: string | null;
  invoiceCity?: string | null;
  invoiceAddress?: string | null;
  activationToken?: string | null;
  isActivated?: boolean | null;
  isApproved?: boolean | null;
  resetPasswordTokenExpiry?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  sku: string;
  name: {
    en: string;
    bg: string;
  };
  description?: {
    en?: string | null;
    bg?: string | null;
  };
  price: number;
  ownStock: number;
  deliveryStock: number;
  deliveryTime?: string | null;
  supplierName?: string | null;
  categories?: (number | Category)[] | null;
  /**
   * Add tags to help organize and search products
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Main product image (will be shown in product lists)
   */
  mainImage?: (number | null) | Media;
  /**
   * Upload product images. First image will be used as the main product image.
   */
  imageGallery?:
    | {
        /**
         * Upload product image
         */
        image: number | Media;
        /**
         * Alt text for accessibility
         */
        alt?: string | null;
        /**
         * Set as main product image
         */
        isMain?: boolean | null;
        id?: string | null;
      }[]
    | null;
  brandingOptions?:
    | {
        option: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Control whether this product is visible on the website
   */
  published?: boolean | null;
  syncUpdatedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  name: {
    en: string;
    bg: string;
  };
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-variants".
 */
export interface ProductVariant {
  id: number;
  /**
   * Parent product this variant belongs to
   */
  product: number | Product;
  /**
   * Unique SKU for this specific variant
   */
  sku: string;
  /**
   * Variant options that define this variant (e.g., Red + Large)
   */
  variantOptions: {
    /**
     * Variant option (e.g., color, size)
     */
    option: number | VariantOption;
    id?: string | null;
  }[];
  /**
   * Price for this specific variant (overrides product base price)
   */
  price: number;
  /**
   * Stock available in own warehouse
   */
  ownStock: number;
  /**
   * Stock available for delivery
   */
  deliveryStock: number;
  /**
   * Specific delivery time for this variant (overrides product delivery time)
   */
  deliveryTime?: string | null;
  /**
   * Main image for this specific variant
   */
  mainImage?: (number | null) | Media;
  /**
   * Variant-specific images
   */
  imageGallery?:
    | {
        /**
         * Upload variant image
         */
        image: number | Media;
        /**
         * Alt text for accessibility
         */
        alt?: string | null;
        /**
         * Set as main variant image
         */
        isMain?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Whether this variant is available for purchase
   */
  active?: boolean | null;
  /**
   * Order in which this variant appears in lists
   */
  sortOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variant-options".
 */
export interface VariantOption {
  id: number;
  /**
   * Display name for this option (e.g., "Red", "Large")
   */
  name: string;
  /**
   * Type of variant option
   */
  type: 'color' | 'size' | 'material' | 'style';
  /**
   * Internal value/code for this option
   */
  value: string;
  /**
   * Hex color code (for color type variants)
   */
  colorCode?: string | null;
  /**
   * Order in which this option appears in lists
   */
  sortOrder?: number | null;
  /**
   * Whether this option is available for use
   */
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: number;
  user: number | User;
  items?:
    | {
        productId: string;
        sku: string;
        name: {
          en: string;
          bg: string;
        };
        price: number;
        discountedPrice?: number | null;
        quantity: number;
        imageUrl?: string | null;
        stockStatus: 'available' | 'delivery' | 'unavailable';
        deliveryTime?: string | null;
        supplierName?: string | null;
        id?: string | null;
      }[]
    | null;
  itemsCount?: number | null;
  total?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'product-variants';
        value: number | ProductVariant;
      } | null)
    | ({
        relationTo: 'variant-options';
        value: number | VariantOption;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'carts';
        value: number | Cart;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  phoneCountryCode?: T;
  phoneNumber?: T;
  role?: T;
  discountPercent?: T;
  companyName?: T;
  eik?: T;
  bulstat?: T;
  mol?: T;
  companyWebsite?: T;
  companyActivity?: T;
  deliveryCountry?: T;
  deliveryPostalCode?: T;
  deliveryCity?: T;
  deliveryAddress?: T;
  invoiceCountry?: T;
  invoicePostalCode?: T;
  invoiceCity?: T;
  invoiceAddress?: T;
  activationToken?: T;
  isActivated?: T;
  isApproved?: T;
  resetPasswordTokenExpiry?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  sku?: T;
  name?:
    | T
    | {
        en?: T;
        bg?: T;
      };
  description?:
    | T
    | {
        en?: T;
        bg?: T;
      };
  price?: T;
  ownStock?: T;
  deliveryStock?: T;
  deliveryTime?: T;
  supplierName?: T;
  categories?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  mainImage?: T;
  imageGallery?:
    | T
    | {
        image?: T;
        alt?: T;
        isMain?: T;
        id?: T;
      };
  brandingOptions?:
    | T
    | {
        option?: T;
        id?: T;
      };
  published?: T;
  syncUpdatedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-variants_select".
 */
export interface ProductVariantsSelect<T extends boolean = true> {
  product?: T;
  sku?: T;
  variantOptions?:
    | T
    | {
        option?: T;
        id?: T;
      };
  price?: T;
  ownStock?: T;
  deliveryStock?: T;
  deliveryTime?: T;
  mainImage?: T;
  imageGallery?:
    | T
    | {
        image?: T;
        alt?: T;
        isMain?: T;
        id?: T;
      };
  active?: T;
  sortOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variant-options_select".
 */
export interface VariantOptionsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  value?: T;
  colorCode?: T;
  sortOrder?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  name?:
    | T
    | {
        en?: T;
        bg?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts_select".
 */
export interface CartsSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        productId?: T;
        sku?: T;
        name?:
          | T
          | {
              en?: T;
              bg?: T;
            };
        price?: T;
        discountedPrice?: T;
        quantity?: T;
        imageUrl?: T;
        stockStatus?: T;
        deliveryTime?: T;
        supplierName?: T;
        id?: T;
      };
  itemsCount?: T;
  total?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}